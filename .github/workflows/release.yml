name: Tag & Release

on:
  push:
    branches:
      - main

jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get version from Cargo.toml
        id: get_version
        run: |
          VERSION=$(grep '^version =' ferrite-db/Cargo.toml | cut -d '"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version detected: $VERSION"

      - name: Check if tag exists
        id: check_tag
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/v${VERSION}$"; then
            echo "Tag v${VERSION} already exists. Skipping release."
            echo "SKIP_RELEASE=true" >> $GITHUB_ENV
          else
            echo "Tag v${VERSION} does not exist."
            echo "SKIP_RELEASE=false" >> $GITHUB_ENV
          fi

      - name: Stop if release should be skipped
        if: env.SKIP_RELEASE == 'true'
        run: exit 0

      - name: Create tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v${VERSION}
          git push origin v${VERSION}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build --release --manifest-path ferrite-db/Cargo.toml

      - name: Package Binary
        run: |
          mkdir dist
          cp ferrite-db/target/release/ferrite-db dist/
          tar -czvf ferrite-db-v${VERSION}.tar.gz -C dist ferrite-db

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          files: ferrite-db-v${{ env.VERSION }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
